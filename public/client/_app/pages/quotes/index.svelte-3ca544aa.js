import{S as c,i as d,s as p,a2 as _,a3 as m,e as q,w as h,c as b,a as g,x as Q,d as f,b as v,g as j,y,a4 as $,q as k,o as w,B as x}from"../../chunks/vendor-0f79dfe6.js";import A from"./parseQuotes.svelte-5388cb3d.js";import{q as D}from"../../chunks/quotes-d7d5baaa.js";import"./DisplayQuotes.svelte-fbdac828.js";import"./AddQuote.svelte-a4fe4203.js";/* empty css                                                             */function S(a){let e,t,n,r;function u(s){a[2](s)}let o={};return a[0]!==void 0&&(o.filteredQuotes=a[0]),t=new A({props:o}),_.push(()=>m(t,"filteredQuotes",u)),{c(){e=q("div"),h(t.$$.fragment),this.h()},l(s){e=b(s,"DIV",{class:!0});var i=g(e);Q(t.$$.fragment,i),i.forEach(f),this.h()},h(){v(e,"class","flex w-full h-full justify-start")},m(s,i){j(s,e,i),y(t,e,null),r=!0},p(s,[i]){const l={};!n&&i&1&&(n=!0,l.filteredQuotes=s[0],$(()=>n=!1)),t.$set(l)},i(s){r||(k(t.$$.fragment,s),r=!0)},o(s){w(t.$$.fragment,s),r=!1},d(s){s&&f(e),x(t)}}}const F=async({fetch:a})=>{const e=await a("/quotes.json");if(e.ok){const{quotes:t}=await e.json();return{props:{quotes:t}}}};function B(a,e,t){let n=[],{quotes:r}=e;D.subscribe(o=>{});function u(o){n=o,t(0,n)}return a.$$set=o=>{"quotes"in o&&t(1,r=o.quotes)},[n,r,u]}class G extends c{constructor(e){super();d(this,e,B,S,p,{quotes:1})}}export{G as default,F as load};
